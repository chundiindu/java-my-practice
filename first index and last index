public class FirstAndLastIndex {
 
   public static void main(String[] args) {
      
      //Input array 
      int arr[] = { 1, 4, 7, 8, 8, 11, 11, 11, 11, 12, 13, 13 };
     
      //Value to be searched
      int search = 11;
      int firstIndex = -1;
      int lastIndex = -1;
 
      //Run a loop from 0 to n-1
      for (int i = 0; i < arr.length; i++) {
         
         //Assign only first time in firstIndex
         if (arr[i] == search && firstIndex == -1) {
               firstIndex = i;
          }
 
          //Assign value at last index
          if (arr[i] == search && firstIndex != -1) {
                 lastIndex = i;
           }
      }
 
      System.out.println(" First index found at " + firstIndex);
      System.out.println(" Last index found at " + lastIndex);
    }
}

public class MyClass {
    public static void main(String args[]) {
    int[] arr = {1,2,3,4,4,4,5,6,7};
    int target = 4;
    int result1 = findfirst(arr,target);
    System.out.println("first position"+" "+result1);
    int result2 = findlast(arr,target);
    System.out.println("last position"+" "+result2);
      
    }
    
    public static int findfirst(int[] arr, int target)
    {
        int start = 0;
        int end = arr.length-1;
        int index = -1;
        while(start<=end)
        {
            int mid = (start+end)/2;
            if(arr[mid]==target)
            {
               index = mid;
               end = mid-1;
                
            }
            else if(arr[mid]>target)
            {
                end=mid-1;
            }
            else
            {
                start=mid+1;
            }
        }
        return index;
    }
    public static int findlast(int[] arr, int target)
    {
        int start = 0;
        int end = arr.length-1;
        int index = -1;
        while(start<=end)
        {
            int mid = (start+end)/2;
            if(arr[mid]==target)
            {
               index = mid;
               start=mid+1;
                
            }
            else if(arr[mid]>target)
            {
                end=mid-1;
            }
            else
            {
                start=mid+1;
            }
        }
        return index;
    }
}
